/*
 * lunix-chrdev.h
 *
 * Definition file for the
 * Lunix:TNG character device
 *
 * Updated for Linux Kernel 6.11
 *
 * Vangelis Koukis <vkoukis@cslab.ece.ntua.gr>
 */

#ifndef _LUNIX_CHRDEV_H
#define _LUNIX_CHRDEV_H

/*
 * Lunix:TNG character device
 */
#define LUNIX_CHRDEV_MAJOR 60   /* Reserved for local / experimental use */
#define LUNIX_CHRDEV_BUFSZ 20   /* Buffer size used to hold textual info */

/* Compile-time parameters */

#ifdef __KERNEL__ 

#include <linux/fs.h>
#include <linux/kernel.h>
#include <linux/module.h>
#include <linux/mutex.h>          /* Use mutex for synchronization */
#include <linux/uaccess.h>        /* For user-space access functions */
#include <linux/types.h>
#include <linux/ioctl.h>
#include <linux/wait.h>           /* For blocking operations */
#include <linux/sched.h>          /* For schedule operations */

#include "lunix.h"

/*
 * Private state for an open character device node
 */
struct lunix_chrdev_state_struct {
    /*
     * Opened devices are associated with a sensor
     * and a type of measurement
     */
    enum lunix_msr_enum type;
    struct lunix_sensor_struct *sensor;
    atomic_t raw_mode;

    /* A buffer used to hold cached textual info */
    int buf_lim;                             /* Current buffer size */
    unsigned char buf_data[LUNIX_CHRDEV_BUFSZ];
    uint32_t buf_timestamp;                  /* Timestamp of the last update */

    struct mutex lock;                       /* Mutex for mutual exclusion */
    
    wait_queue_head_t read_queue;            /* Wait queue for blocking reads */
    bool data_ready;                         /* Flag to indicate new data */

    /* Blocking vs. non-blocking mode */
    int nonblock_mode;
};

/*
 * Function prototypes
 */
int lunix_chrdev_init(void);
void lunix_chrdev_destroy(void);

/* Helper functions for read/write operations */
ssize_t lunix_chrdev_read(struct file *filp, char __user *buf, size_t count, loff_t *f_pos);
ssize_t lunix_chrdev_write(struct file *filp, const char __user *buf, size_t count, loff_t *f_pos);
long lunix_chrdev_ioctl(struct file *filp, unsigned int cmd, unsigned long arg);

#endif /* __KERNEL__ */

#include <linux/ioctl.h>

/*
 * Definition of ioctl commands
 */
#define LUNIX_IOC_MAGIC     LUNIX_CHRDEV_MAJOR

#define LUNIX_IOC_GET_RAW   _IOR(LUNIX_IOC_MAGIC, 0, void *)
#define LUNIX_IOC_GET_COOKED _IOR(LUNIX_IOC_MAGIC, 1, void *)

#define LUNIX_IOC_MAXNR 1

#endif /* _LUNIX_CHRDEV_H */
