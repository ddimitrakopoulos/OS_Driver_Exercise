/*
 * Updates the cached state of a character device
 * based on sensor data. Must be called with the
 * character device state lock held.
 */
static int lunix_chrdev_state_update(struct lunix_chrdev_state_struct *state)
{
	unsigned long flags;
	struct lunix_sensor_struct *sensor;
	uint16_t raw_data;
	debug("leaving\n");

	/*
	 * Grab the raw data quickly, hold the
	 * spinlock for as little as possible.
	 */

	spin_lock_irqsave(&sensor->lock, flags);
	/*Update buf_data by loading the data of 1 sensor*/
	raw_data = sensor->msr_data[state->type]->values[0];
	state->buf_timestamp = ktime_get_real_seconds();
	spin_unlock_irqrestore(&sensor->lock,flags);

	/*
	 * Now we can take our time to format them,
	 * holding only the private state semaphore
	 */
	
	if(lunix_chrdev_state_needs_refresh(state))
	{
		if(state->type == 0)
		{
			raw_data = lookup_voltage[raw_data];
			 snprintf(state->buf_data,20,"%.3ld",raw_data);
		}
		if(state->type == 1)
		{
			raw_data = lookup_temperature[raw_data];
			 snprintf(state->buf_data,20,"%.3ld",raw_data);
		}
		if(state->type == 2)
		{
			raw_data = lookup_light[raw_data];
			 snprintf(state->buf_data,20,"%.3ld",raw_data);
		}
	}

	debug("leaving\n");
	return 0;
}
